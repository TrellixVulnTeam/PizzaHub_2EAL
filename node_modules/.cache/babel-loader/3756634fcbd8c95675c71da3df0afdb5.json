{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/react-pizza/react-pizza/src/components/SortPopup.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SortPopup = /*#__PURE__*/React.memo(_c = _s(function SortPopup({\n  items,\n  onClickSortType,\n  activeSortType\n}) {\n  _s();\n\n  // memo for tracking changes in props and if no changes - no render\n  const [visiblePopup, setVisiblePopup] = React.useState(false);\n  const sortRef = React.useRef();\n  const activeLabel = items.find(obj => obj.type === activeSortType);\n\n  const handleOutsideClick = e => {\n    if (!e.path.includes(sortRef.current)) {\n      setVisiblePopup(false);\n    }\n  };\n\n  const toggleVisiblePopup = index => {\n    setVisiblePopup(!visiblePopup);\n  };\n\n  const onSelectItem = index => {\n    onClickSortType(index);\n    setVisiblePopup(false);\n  };\n\n  React.useEffect(() => {\n    document.body.addEventListener('click', handleOutsideClick);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: sortRef,\n    className: \"sort\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort__label\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        className: visiblePopup ? 'rotated' : '',\n        width: \"10\",\n        height: \"6\",\n        viewBox: \"0 0 10 6\",\n        fill: \"none\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\",\n          fill: \"#2C2C2C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Sort by:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: toggleVisiblePopup,\n        children: activeLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), visiblePopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort__popup\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: items && items.map((obj, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: activeSortType === index ? 'active' : '',\n          onClick: () => onSelectItem(index),\n          children: obj.name\n        }, `${obj.type}_${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}, \"N/GoJk3wxDYjkEqxGIJWJbfBLEg=\"));\n_c2 = SortPopup;\nSortPopup.propTypes = {\n  activeSortType: PropTypes.string.isRequired,\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onClickSortType: PropTypes.func.isRequired\n};\nexport default SortPopup;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SortPopup$React.memo\");\n$RefreshReg$(_c2, \"SortPopup\");","map":{"version":3,"sources":["/Users/mac/Desktop/react-pizza/react-pizza/src/components/SortPopup.jsx"],"names":["React","PropTypes","SortPopup","memo","items","onClickSortType","activeSortType","visiblePopup","setVisiblePopup","useState","sortRef","useRef","activeLabel","find","obj","type","handleOutsideClick","e","path","includes","current","toggleVisiblePopup","index","onSelectItem","useEffect","document","body","addEventListener","map","name","propTypes","string","isRequired","arrayOf","object","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SortPopup = React.memo(function SortPopup({ items, onClickSortType, activeSortType }) {\n  // memo for tracking changes in props and if no changes - no render\n  const [visiblePopup, setVisiblePopup] = React.useState(false);\n  const sortRef = React.useRef();\n  const activeLabel = items.find((obj) => obj.type === activeSortType);\n\n  const handleOutsideClick = (e) => {\n    if (!e.path.includes(sortRef.current)) {\n      setVisiblePopup(false);\n    }\n  };\n\n  const toggleVisiblePopup = (index) => {\n    setVisiblePopup(!visiblePopup);\n  };\n\n  const onSelectItem = (index) => {\n    onClickSortType(index);\n    setVisiblePopup(false);\n  };\n\n  React.useEffect(() => {\n    document.body.addEventListener('click', handleOutsideClick);\n  }, []);\n\n  return (\n    <div ref={sortRef} className=\"sort\">\n      <div className=\"sort__label\">\n        <svg\n          className={visiblePopup ? 'rotated' : ''}\n          width=\"10\"\n          height=\"6\"\n          viewBox=\"0 0 10 6\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\n            fill=\"#2C2C2C\"\n          />\n        </svg>\n        <b>Sort by:</b>\n        <span onClick={toggleVisiblePopup}>{activeLabel}</span>\n      </div>\n      {visiblePopup && (\n        <div className=\"sort__popup\">\n          <ul>\n            {items &&\n              items.map((obj, index) => (\n                <li\n                  className={activeSortType === index ? 'active' : ''}\n                  onClick={() => onSelectItem(index)}\n                  key={`${obj.type}_${index}`}>\n                  {obj.name}\n                </li>\n              ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n});\n\nSortPopup.propTypes = {\n  activeSortType: PropTypes.string.isRequired,\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onClickSortType: PropTypes.func.isRequired,\n};\n\nexport default SortPopup;\n"]},"metadata":{},"sourceType":"module"}