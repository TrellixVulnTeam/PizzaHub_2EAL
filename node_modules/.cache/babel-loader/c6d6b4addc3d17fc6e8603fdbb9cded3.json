{"ast":null,"code":"const initialState = {\n  items: {},\n  totalPrice: 0,\n  totalCount: 0\n};\n\nconst cart = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_PIZZA_CART':\n      {\n        const currentPizzaItems = !state.items[action.payload.id] ? [action.payload] : [...state.items[action.payload.id].items, action.payload];\n\n        const getTotalPrice = arr => arr.reduce((sum, obj) => obj.price + sum, 0);\n\n        const newItems = { ...state.items,\n          [action.payload.id]: {\n            items: currentPizzaItems,\n            totalPrice: getTotalPrice(currentPizzaItems)\n          }\n        };\n        const totalCount = Object.keys(newItems).reduce((sum, key) => newItems[key].items.length + sum, 0);\n        const totalPrice = getTotalPrice(allPizzas);\n        return { ...state,\n          items: newItems,\n          totalCount,\n          totalPrice\n        };\n      }\n\n    case 'CLEAR_CARD':\n      return {\n        items: {},\n        totalPrice: 0,\n        totalCount: 0\n      };\n\n    case 'REMOVE_CART_ITEM':\n      {\n        const newItems = { ...state.items\n        };\n        const currentTotalPrice = newItems[action.payload].totalPrice;\n        const currentTotalCount = newItems[action.payload].items.length;\n        delete newItems[action.payload];\n        return { ...state,\n          items: newItems,\n          totalPrice: state.totalPrice - currentTotalPrice,\n          totalCount: state.totalCount - currentTotalCount\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default cart;","map":{"version":3,"sources":["/Users/mac/Desktop/react-pizza/react-pizza/src/redux/reducers/cart.js"],"names":["initialState","items","totalPrice","totalCount","cart","state","action","type","currentPizzaItems","payload","id","getTotalPrice","arr","reduce","sum","obj","price","newItems","Object","keys","key","length","allPizzas","currentTotalPrice","currentTotalCount"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,UAAU,EAAE,CAFO;AAGnBC,EAAAA,UAAU,EAAE;AAHO,CAArB;;AAMA,MAAMC,IAAI,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AAAuB;AACrB,cAAMC,iBAAiB,GAAG,CAACH,KAAK,CAACJ,KAAN,CAAYK,MAAM,CAACG,OAAP,CAAeC,EAA3B,CAAD,GACtB,CAACJ,MAAM,CAACG,OAAR,CADsB,GAEtB,CAAC,GAAGJ,KAAK,CAACJ,KAAN,CAAYK,MAAM,CAACG,OAAP,CAAeC,EAA3B,EAA+BT,KAAnC,EAA0CK,MAAM,CAACG,OAAjD,CAFJ;;AAIA,cAAME,aAAa,GAAIC,GAAD,IAASA,GAAG,CAACC,MAAJ,CAAW,CAACC,GAAD,EAAMC,GAAN,KAAcA,GAAG,CAACC,KAAJ,GAAYF,GAArC,EAA0C,CAA1C,CAA/B;;AAEA,cAAMG,QAAQ,GAAG,EACf,GAAGZ,KAAK,CAACJ,KADM;AAEf,WAACK,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqB;AACnBT,YAAAA,KAAK,EAAEO,iBADY;AAEnBN,YAAAA,UAAU,EAAES,aAAa,CAACH,iBAAD;AAFN;AAFN,SAAjB;AAOA,cAAML,UAAU,GAAGe,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsBJ,MAAtB,CACjB,CAACC,GAAD,EAAMM,GAAN,KAAcH,QAAQ,CAACG,GAAD,CAAR,CAAcnB,KAAd,CAAoBoB,MAApB,GAA6BP,GAD1B,EAEjB,CAFiB,CAAnB;AAIA,cAAMZ,UAAU,GAAGS,aAAa,CAACW,SAAD,CAAhC;AAEA,eAAO,EACL,GAAGjB,KADE;AAELJ,UAAAA,KAAK,EAAEgB,QAFF;AAGLd,UAAAA,UAHK;AAILD,UAAAA;AAJK,SAAP;AAMD;;AAED,SAAK,YAAL;AACE,aAAO;AACLD,QAAAA,KAAK,EAAE,EADF;AAELC,QAAAA,UAAU,EAAE,CAFP;AAGLC,QAAAA,UAAU,EAAE;AAHP,OAAP;;AAKF,SAAK,kBAAL;AAAyB;AACvB,cAAMc,QAAQ,GAAG,EACf,GAAGZ,KAAK,CAACJ;AADM,SAAjB;AAGA,cAAMsB,iBAAiB,GAAGN,QAAQ,CAACX,MAAM,CAACG,OAAR,CAAR,CAAyBP,UAAnD;AACA,cAAMsB,iBAAiB,GAAGP,QAAQ,CAACX,MAAM,CAACG,OAAR,CAAR,CAAyBR,KAAzB,CAA+BoB,MAAzD;AACA,eAAOJ,QAAQ,CAACX,MAAM,CAACG,OAAR,CAAf;AACA,eAAO,EACL,GAAGJ,KADE;AAELJ,UAAAA,KAAK,EAAEgB,QAFF;AAGLf,UAAAA,UAAU,EAAEG,KAAK,CAACH,UAAN,GAAmBqB,iBAH1B;AAILpB,UAAAA,UAAU,EAAEE,KAAK,CAACF,UAAN,GAAmBqB;AAJ1B,SAAP;AAMD;;AAED;AACE,aAAOnB,KAAP;AAnDJ;AAqDD,CAtDD;;AAwDA,eAAeD,IAAf","sourcesContent":["const initialState = {\n  items: {},\n  totalPrice: 0,\n  totalCount: 0,\n};\n\nconst cart = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_PIZZA_CART': {\n      const currentPizzaItems = !state.items[action.payload.id]\n        ? [action.payload]\n        : [...state.items[action.payload.id].items, action.payload];\n\n      const getTotalPrice = (arr) => arr.reduce((sum, obj) => obj.price + sum, 0);\n\n      const newItems = {\n        ...state.items,\n        [action.payload.id]: {\n          items: currentPizzaItems,\n          totalPrice: getTotalPrice(currentPizzaItems),\n        },\n      };\n      const totalCount = Object.keys(newItems).reduce(\n        (sum, key) => newItems[key].items.length + sum,\n        0,\n      );\n      const totalPrice = getTotalPrice(allPizzas);\n\n      return {\n        ...state,\n        items: newItems,\n        totalCount,\n        totalPrice,\n      };\n    }\n\n    case 'CLEAR_CARD':\n      return {\n        items: {},\n        totalPrice: 0,\n        totalCount: 0,\n      };\n    case 'REMOVE_CART_ITEM': {\n      const newItems = {\n        ...state.items,\n      };\n      const currentTotalPrice = newItems[action.payload].totalPrice;\n      const currentTotalCount = newItems[action.payload].items.length;\n      delete newItems[action.payload];\n      return {\n        ...state,\n        items: newItems,\n        totalPrice: state.totalPrice - currentTotalPrice,\n        totalCount: state.totalCount - currentTotalCount,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default cart;\n"]},"metadata":{},"sourceType":"module"}