{"ast":null,"code":"const initialState = {\n  items: {},\n  totalPrice: 0,\n  totalCount: 0\n};\n\nconst cart = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_PIZZA_CART':\n      {\n        const currentPizzaItems = !state.items[action.payload.id] ? [action.payload] : [...state.items[action.payload.id], action.payload];\n\n        const getTotalPrice = arr => arr.reduce((sum, obj) => obj.price + sum, 0);\n\n        const newItems = { ...state.items,\n          [action.payload.id]: {\n            items: currentPizzaItems,\n            totalPrice: getTotalPrice(currentPizzaItems)\n          }\n        };\n        const allPizzas = [].concat.apply([], Object.values(newItems));\n        const totalPrice = getTotalPrice(allPizzas);\n        return { ...state,\n          items: newItems,\n          totalCount: allPizzas.length,\n          totalPrice\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default cart;","map":{"version":3,"sources":["/Users/mac/Desktop/react-pizza/react-pizza/src/redux/reducers/cart.js"],"names":["initialState","items","totalPrice","totalCount","cart","state","action","type","currentPizzaItems","payload","id","getTotalPrice","arr","reduce","sum","obj","price","newItems","allPizzas","concat","apply","Object","values","length"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,UAAU,EAAE,CAFO;AAGnBC,EAAAA,UAAU,EAAE;AAHO,CAArB;;AAMA,MAAMC,IAAI,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AAAuB;AACrB,cAAMC,iBAAiB,GAAG,CAACH,KAAK,CAACJ,KAAN,CAAYK,MAAM,CAACG,OAAP,CAAeC,EAA3B,CAAD,GACtB,CAACJ,MAAM,CAACG,OAAR,CADsB,GAEtB,CAAC,GAAGJ,KAAK,CAACJ,KAAN,CAAYK,MAAM,CAACG,OAAP,CAAeC,EAA3B,CAAJ,EAAoCJ,MAAM,CAACG,OAA3C,CAFJ;;AAIA,cAAME,aAAa,GAAIC,GAAD,IAASA,GAAG,CAACC,MAAJ,CAAW,CAACC,GAAD,EAAMC,GAAN,KAAcA,GAAG,CAACC,KAAJ,GAAYF,GAArC,EAA0C,CAA1C,CAA/B;;AAEA,cAAMG,QAAQ,GAAG,EACf,GAAGZ,KAAK,CAACJ,KADM;AAEf,WAACK,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqB;AACnBT,YAAAA,KAAK,EAAEO,iBADY;AAEnBN,YAAAA,UAAU,EAAES,aAAa,CAACH,iBAAD;AAFN;AAFN,SAAjB;AAQA,cAAMU,SAAS,GAAG,GAAGC,MAAH,CAAUC,KAAV,CAAgB,EAAhB,EAAoBC,MAAM,CAACC,MAAP,CAAcL,QAAd,CAApB,CAAlB;AACA,cAAMf,UAAU,GAAGS,aAAa,CAACO,SAAD,CAAhC;AAEA,eAAO,EACL,GAAGb,KADE;AAELJ,UAAAA,KAAK,EAAEgB,QAFF;AAGLd,UAAAA,UAAU,EAAEe,SAAS,CAACK,MAHjB;AAILrB,UAAAA;AAJK,SAAP;AAMD;;AACD;AACE,aAAOG,KAAP;AA3BJ;AA6BD,CA9BD;;AAgCA,eAAeD,IAAf","sourcesContent":["const initialState = {\n  items: {},\n  totalPrice: 0,\n  totalCount: 0,\n};\n\nconst cart = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_PIZZA_CART': {\n      const currentPizzaItems = !state.items[action.payload.id]\n        ? [action.payload]\n        : [...state.items[action.payload.id], action.payload];\n\n      const getTotalPrice = (arr) => arr.reduce((sum, obj) => obj.price + sum, 0);\n\n      const newItems = {\n        ...state.items,\n        [action.payload.id]: {\n          items: currentPizzaItems,\n          totalPrice: getTotalPrice(currentPizzaItems),\n        },\n      };\n\n      const allPizzas = [].concat.apply([], Object.values(newItems));\n      const totalPrice = getTotalPrice(allPizzas);\n\n      return {\n        ...state,\n        items: newItems,\n        totalCount: allPizzas.length,\n        totalPrice,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default cart;\n"]},"metadata":{},"sourceType":"module"}