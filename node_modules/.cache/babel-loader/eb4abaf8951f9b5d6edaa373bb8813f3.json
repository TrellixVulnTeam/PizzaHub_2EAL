{"ast":null,"code":"const initialState = {\n  items: {},\n  totalPrice: 0,\n  totalCount: 0\n};\n\nconst cart = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_PIZZA_CART':\n      {\n        const currentPizzaItems = !state.items[action.payload.id] ? [action.payload] : [...state.items[action.payload.id].items, action.payload];\n\n        const getTotalPrice = arr => arr.reduce((sum, obj) => obj.price + sum, 0);\n\n        const _get = (obj, path) => {\n          const [firstKey, ...keys] = path.split('.');\n          return keys.reduce((val, key) => {\n            return val[key];\n          }, obj[firstKey]);\n        };\n\n        const totalSum = (obj, path) => {\n          return Object.values(obj).reduce((sum, obj) => {\n            const value = _get(obj, path);\n\n            return sum + value;\n          }, 0);\n        };\n\n        const newItems = { ...state.items,\n          [action.payload.id]: {\n            items: currentPizzaItems,\n            totalPrice: getTotalPrice(currentPizzaItems)\n          }\n        };\n        const totalCount = totalSum(newItems, 'items.length');\n        const totalPrice = totalSum(newItems, 'totalPrice');\n        return { ...state,\n          items: newItems,\n          totalCount,\n          totalPrice\n        };\n      }\n\n    case 'CLEAR_CARD':\n      return {\n        items: {},\n        totalPrice: 0,\n        totalCount: 0\n      };\n\n    case 'REMOVE_CART_ITEM':\n      {\n        const newItems = { ...state.items\n        };\n        const currentTotalPrice = newItems[action.payload].totalPrice;\n        const currentTotalCount = newItems[action.payload].items.length;\n        delete newItems[action.payload];\n        return { ...state,\n          items: newItems,\n          totalPrice: state.totalPrice - currentTotalPrice,\n          totalCount: state.totalCount - currentTotalCount\n        };\n      }\n\n    case 'PLUS_CART_ITEM':\n      const newItems = [...state.items[action.payload].items, state.items[action.payload].items[0]];\n      return { ...state,\n        items: {\n          [action.payload]: {\n            items: newItems,\n            totalPrice: getTotalPrice(newItems)\n          }\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cart;","map":{"version":3,"sources":["/Users/mac/Desktop/react-pizza/react-pizza/src/redux/reducers/cart.js"],"names":["initialState","items","totalPrice","totalCount","cart","state","action","type","currentPizzaItems","payload","id","getTotalPrice","arr","reduce","sum","obj","price","_get","path","firstKey","keys","split","val","key","totalSum","Object","values","value","newItems","currentTotalPrice","currentTotalCount","length"],"mappings":"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","sourcesContent":["const initialState = {\n  items: {},\n  totalPrice: 0,\n  totalCount: 0,\n};\n\nconst cart = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_PIZZA_CART': {\n      const currentPizzaItems = !state.items[action.payload.id]\n        ? [action.payload]\n        : [...state.items[action.payload.id].items, action.payload];\n\n      const getTotalPrice = (arr) => arr.reduce((sum, obj) => obj.price + sum, 0);\n\n      const _get = (obj, path) => {\n        const [firstKey, ...keys] = path.split('.');\n        return keys.reduce((val, key) => {\n          return val[key];\n        }, obj[firstKey]);\n      };\n\n      const totalSum = (obj, path) => {\n        return Object.values(obj).reduce((sum, obj) => {\n          const value = _get(obj, path);\n          return sum + value;\n        }, 0);\n      };\n\n      const newItems = {\n        ...state.items,\n        [action.payload.id]: {\n          items: currentPizzaItems,\n          totalPrice: getTotalPrice(currentPizzaItems),\n        },\n      };\n      const totalCount = totalSum(newItems, 'items.length');\n      const totalPrice = totalSum(newItems, 'totalPrice');\n\n      return {\n        ...state,\n        items: newItems,\n        totalCount,\n        totalPrice,\n      };\n    }\n\n    case 'CLEAR_CARD':\n      return {\n        items: {},\n        totalPrice: 0,\n        totalCount: 0,\n      };\n    case 'REMOVE_CART_ITEM': {\n      const newItems = {\n        ...state.items,\n      };\n      const currentTotalPrice = newItems[action.payload].totalPrice;\n      const currentTotalCount = newItems[action.payload].items.length;\n      delete newItems[action.payload];\n      return {\n        ...state,\n        items: newItems,\n        totalPrice: state.totalPrice - currentTotalPrice,\n        totalCount: state.totalCount - currentTotalCount,\n      };\n    }\n\n    case 'PLUS_CART_ITEM':\n      const newItems = [...state.items[action.payload].items, state.items[action.payload].items[0]];\n      return {\n        ...state,\n        items: {\n          [action.payload]: {\n            items: newItems,\n            totalPrice: getTotalPrice(newItems),\n          },\n        },\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cart;\n"]},"metadata":{},"sourceType":"module"}